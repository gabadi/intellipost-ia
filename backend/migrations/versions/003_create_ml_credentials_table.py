"""Create ml_credentials table

Revision ID: 003_create_ml_credentials
Revises: 002_seed_default_admin_user
Create Date: 2025-07-06 10:00:00.000000

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "003_create_ml_credentials"
down_revision: str | None = "002_seed_default_admin_user"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ml_credentials",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("ml_app_id", sa.String(length=255), nullable=False),
        sa.Column("ml_secret_key_encrypted", sa.Text(), nullable=False),
        sa.Column("ml_access_token_encrypted", sa.Text(), nullable=False),
        sa.Column("ml_refresh_token_encrypted", sa.Text(), nullable=False),
        sa.Column("ml_token_type", sa.String(length=50), nullable=False),
        sa.Column("ml_expires_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("ml_refresh_expires_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("ml_scopes", sa.String(length=255), nullable=False),
        sa.Column("ml_user_id", sa.Integer(), nullable=False),
        sa.Column("ml_nickname", sa.String(length=255), nullable=True),
        sa.Column("ml_email", sa.String(length=255), nullable=True),
        sa.Column("ml_site_id", sa.String(length=10), nullable=False),
        sa.Column("ml_auth_domain", sa.String(length=255), nullable=True),
        sa.Column("ml_is_valid", sa.Boolean(), nullable=False),
        sa.Column("ml_last_validated_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("ml_validation_error", sa.Text(), nullable=True),
        sa.Column("pkce_code_challenge", sa.String(length=255), nullable=True),
        sa.Column("pkce_code_verifier", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
    )

    # Create indexes for performance
    op.create_index(
        op.f("ix_ml_credentials_id"), "ml_credentials", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_ml_credentials_user_id"), "ml_credentials", ["user_id"], unique=False
    )
    op.create_index(
        op.f("ix_ml_credentials_ml_user_id"),
        "ml_credentials",
        ["ml_user_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_ml_credentials_ml_site_id"),
        "ml_credentials",
        ["ml_site_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_ml_credentials_ml_expires_at"),
        "ml_credentials",
        ["ml_expires_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_ml_credentials_ml_refresh_expires_at"),
        "ml_credentials",
        ["ml_refresh_expires_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_ml_credentials_ml_is_valid"),
        "ml_credentials",
        ["ml_is_valid"],
        unique=False,
    )

    # Ensure user can only have one ML credential set
    op.create_unique_constraint(
        "uq_ml_credentials_user_id", "ml_credentials", ["user_id"]
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("uq_ml_credentials_user_id", "ml_credentials", type_="unique")
    op.drop_index(op.f("ix_ml_credentials_ml_is_valid"), table_name="ml_credentials")
    op.drop_index(
        op.f("ix_ml_credentials_ml_refresh_expires_at"), table_name="ml_credentials"
    )
    op.drop_index(op.f("ix_ml_credentials_ml_expires_at"), table_name="ml_credentials")
    op.drop_index(op.f("ix_ml_credentials_ml_site_id"), table_name="ml_credentials")
    op.drop_index(op.f("ix_ml_credentials_ml_user_id"), table_name="ml_credentials")
    op.drop_index(op.f("ix_ml_credentials_user_id"), table_name="ml_credentials")
    op.drop_index(op.f("ix_ml_credentials_id"), table_name="ml_credentials")
    op.drop_table("ml_credentials")
    # ### end Alembic commands ###
