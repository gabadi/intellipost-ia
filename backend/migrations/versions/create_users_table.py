"""Create users table

Revision ID: 001_create_users
Revises: 
Create Date: 2025-01-26 10:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '001_create_users'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_email_verified', sa.Boolean(), nullable=False),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('last_failed_login_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('password_reset_token', sa.Text(), nullable=True),
    sa.Column('password_reset_expires_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('email_verification_token', sa.Text(), nullable=True),
    sa.Column('ml_user_id', sa.String(length=255), nullable=True),
    sa.Column('ml_access_token', sa.Text(), nullable=True),
    sa.Column('ml_refresh_token', sa.Text(), nullable=True),
    sa.Column('ml_token_expires_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('default_ml_site', sa.String(length=10), nullable=False),
    sa.Column('auto_publish', sa.Boolean(), nullable=False),
    sa.Column('ai_confidence_threshold', sa.String(length=20), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('last_login_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('email_verified_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###