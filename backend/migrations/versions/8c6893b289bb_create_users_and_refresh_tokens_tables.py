"""Create users and refresh_tokens tables

Revision ID: 8c6893b289bb
Revises:
Create Date: 2025-07-03 03:19:37.474566

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "8c6893b289bb"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(
        op.f("ix_refresh_tokens_user_id"), "refresh_tokens", ["user_id"], unique=False
    )
    op.drop_constraint(
        op.f("refresh_tokens_user_id_fkey"), "refresh_tokens", type_="foreignkey"
    )
    op.add_column("users", sa.Column("is_email_verified", sa.Boolean(), nullable=True))
    # Update existing users to have is_email_verified = False
    op.execute(
        "UPDATE users SET is_email_verified = FALSE WHERE is_email_verified IS NULL"
    )
    # Now make the column NOT NULL
    op.alter_column("users", "is_email_verified", nullable=False)
    op.add_column(
        "users",
        sa.Column("email_verification_token", sa.String(length=255), nullable=True),
    )
    op.add_column(
        "users", sa.Column("password_reset_token", sa.String(length=255), nullable=True)
    )
    op.add_column(
        "users",
        sa.Column(
            "password_reset_expires_at", sa.DateTime(timezone=True), nullable=True
        ),
    )
    op.alter_column(
        "users",
        "ml_access_token",
        existing_type=sa.VARCHAR(length=500),
        type_=sa.Text(),
        existing_nullable=True,
    )
    op.alter_column(
        "users",
        "ml_refresh_token",
        existing_type=sa.VARCHAR(length=500),
        type_=sa.Text(),
        existing_nullable=True,
    )
    op.drop_column("users", "password_changed_at")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "password_changed_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.alter_column(
        "users",
        "ml_refresh_token",
        existing_type=sa.Text(),
        type_=sa.VARCHAR(length=500),
        existing_nullable=True,
    )
    op.alter_column(
        "users",
        "ml_access_token",
        existing_type=sa.Text(),
        type_=sa.VARCHAR(length=500),
        existing_nullable=True,
    )
    op.drop_column("users", "password_reset_expires_at")
    op.drop_column("users", "password_reset_token")
    op.drop_column("users", "email_verification_token")
    op.drop_column("users", "is_email_verified")
    op.create_foreign_key(
        op.f("refresh_tokens_user_id_fkey"),
        "refresh_tokens",
        "users",
        ["user_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_index(op.f("ix_refresh_tokens_user_id"), table_name="refresh_tokens")
    # ### end Alembic commands ###
